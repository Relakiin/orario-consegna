doctype html
html
  head
    title Storico ordini
    link(rel='stylesheet', href='https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css')
    script(src='https://code.jquery.com/jquery-3.3.1.slim.min.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js')
    script(src='https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js')
    script.
      function toggleCorrectPredictions() {
        var showOnlyCorrect = document.getElementById('showCorrectPredictions').checked;
        var orders = document.querySelectorAll('.order-card');
        orders.forEach(function(order) {
          var correctPrediction = order.getAttribute('data-correct-prediction') === 'true';
          if (showOnlyCorrect) {
            if (correctPrediction) {
              order.style.display = 'block';
            } else {
              order.style.display = 'none';
            }
          } else {
            order.style.display = 'block';
          }
        });
      }

      function deleteOrder(orderId) {
        fetch(`/softdelete/${orderId}`, {
          method: 'DELETE',
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            var orderElement = document.getElementById(`order-${orderId}`);
            var pointsScored = parseInt(orderElement.getAttribute('data-points-scored'), 10);
            orderElement.remove();
            updateTotalPoints(-pointsScored);
            checkForRemainingOrders();
          } else {
            alert('Error deleting order');
          }
        });
      }

      function updateTotalPoints(pointsChange) {
        var totalPointsElement = document.getElementById('total-points');
        var currentTotalPoints = parseInt(totalPointsElement.textContent, 10);
        var newTotalPoints = currentTotalPoints + pointsChange;
        totalPointsElement.textContent = newTotalPoints;
      }

      function checkForRemainingOrders() {
        var orders = document.querySelectorAll('.order-card');
        if (orders.length === 0) {
          var alertWarning = document.createElement('div');
          alertWarning.classList.add('alert', 'alert-warning');
          alertWarning.textContent = 'Nessun ordine nello storico';
          document.querySelector('.container').appendChild(alertWarning);
        }
      }
  body
    .container
      h1 Storico ordini
      button.btn.btn-primary.mb-3(type='button', onclick="window.location.href='/'") Ritorna alla home
      button.btn.btn-secondary.mb-3.ml-2(type='button', onclick="window.location.href='/orders'") Gestione ordini
      .card.mb-3
        .card-body
          h5.card-title Punti totali vinti con l'algoritmo: <span id="total-points">#{totalPoints}</span>
      .form-check.mb-3
        input.form-check-input(type='checkbox', id='showCorrectPredictions', onclick='toggleCorrectPredictions()')
        label.form-check-label(for='showCorrectPredictions') Mostra solo ordini con predizione corretta
      if orders.length > 0
        each order, index in orders
          .card.mb-3.order-card(data-correct-prediction=order.correct_prediction ? 'true' : 'false', id=`order-${order._id}`, data-points-scored=`${order.points_scored || 0}`)
            .card-header
              h5.mb-0
                button.btn.btn-link(type='button', data-toggle='collapse', data-target=`#collapseOrder${index}`, aria-expanded='true', aria-controls=`collapseOrder${index}`)
                  | Ordine ##{order._id} - #{new Date(order.sent_at).toLocaleDateString('it-IT')}
            .collapse(id=`collapseOrder${index}`)
              .card-body
                h5.card-title Ordine ##{order._id}
                p.card-text
                  | Cibo:
                  ul
                    each value, key in order.food
                      li #{foodNames[key] || key}: #{value.count}
                  | Orario di invio: #{new Date(order.sent_at).toLocaleTimeString('it-IT', { hour: '2-digit', minute: '2-digit', year: 'numeric', month: 'long', day: 'numeric' })}
                  br
                  | Orario predetto: #{new Date(order.predicted_time).toLocaleTimeString('it-IT', { hour: '2-digit', minute: '2-digit', year: 'numeric', month: 'long', day: 'numeric' })}
                  br
                  | Orario di arrivo: #{order.arrived_at ? new Date(order.arrived_at).toLocaleTimeString('it-IT', { hour: '2-digit', minute: '2-digit', year: 'numeric', month: 'long', day: 'numeric' }) : 'N/A'}
                  br
                  | Giusto (il cibo arrivato non era sbagliato/mancante): #{order.good ? 'Sì' : 'No'}
                  br
                  | Predetto correttamente: #{order.correct_prediction ? 'Sì' : 'No'}
                  br
                  | Punti assegnati: #{order.points_scored || 0}
                button.btn.btn-danger.mt-3(type='button', onclick=`deleteOrder('${order._id}')`) Cancella
      else
        .alert.alert-warning Nessun ordine nello storico
